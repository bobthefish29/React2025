{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpunc\\\\OneDrive\\\\Desktop\\\\React2025\\\\midterm\\\\src\\\\components\\\\ProductPage.js\",\n  _s = $RefreshSig$();\nimport useFetchData from '../hooks/fetchData';\nimport { useNavigate, useParams, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const {\n    data,\n    error,\n    loading\n  } = useFetchData('products');\n  const selectProduct = e => {\n    console.log(e.target.id);\n  };\n  const navigate = useNavigate();\n  const {\n    startingCount\n  } = useParams();\n  console.log(startingCount);\n  const changeProduct = e => {\n    navigate(e.target.id);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"there was an error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"THE PAGE IS LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n  // this is the display for the items, its the list\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data === null || data === void 0 ? void 0 : data.map(product => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        id: product.id,\n        onClick: e => {\n          changeProduct(e);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: product.id,\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ProductPage, \"fpUG7eM0N5PToHegduCWtgkOaUg=\", false, function () {\n  return [useFetchData, useNavigate, useParams];\n});\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["useFetchData","useNavigate","useParams","Outlet","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductPage","_s","data","error","loading","selectProduct","e","console","log","target","id","navigate","startingCount","changeProduct","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/dpunc/OneDrive/Desktop/React2025/midterm/src/components/ProductPage.js"],"sourcesContent":["import useFetchData from '../hooks/fetchData';\r\nimport { useNavigate, useParams, Outlet } from 'react-router-dom';\r\n\r\n\r\nconst ProductPage = () => {\r\n\r\n    const { data, error, loading } = useFetchData('products');\r\n\r\n    const selectProduct = (e) => {\r\n        console.log(e.target.id);\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n    const {startingCount} = useParams();\r\n    console.log(startingCount)\r\n\r\n    const changeProduct = (e) => {\r\n        navigate(e.target.id);\r\n    };\r\n\r\n    if (error) {\r\n        return (\r\n            <div>\r\n                there was an error\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                THE PAGE IS LOADING\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    // this is the display for the items, its the list\r\n    return (\r\n        <>\r\n            {data?.map((product) => {\r\n                return (\r\n                    <button key={product.id} id={product.id} onClick={(e) => { changeProduct(e) }}>\r\n                        <p id={product.id}>{product.title}</p>\r\n                    </button>\r\n                );\r\n            })}\r\n            <Outlet />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductPage;"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,oBAAoB;AAC7C,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGlE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGZ,YAAY,CAAC,UAAU,CAAC;EAEzD,MAAMa,aAAa,GAAIC,CAAC,IAAK;IACzBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,EAAE,CAAC;EAC5B,CAAC;EAED,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACmB;EAAa,CAAC,GAAGlB,SAAS,CAAC,CAAC;EACnCa,OAAO,CAACC,GAAG,CAACI,aAAa,CAAC;EAE1B,MAAMC,aAAa,GAAIP,CAAC,IAAK;IACzBK,QAAQ,CAACL,CAAC,CAACG,MAAM,CAACC,EAAE,CAAC;EACzB,CAAC;EAED,IAAIP,KAAK,EAAE;IACP,oBACIN,OAAA;MAAAiB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;EAEA,IAAId,OAAO,EAAE;IACT,oBACIP,OAAA;MAAAiB,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;;EAKA;EACA,oBACIrB,OAAA,CAAAE,SAAA;IAAAe,QAAA,GACKZ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,GAAG,CAAEC,OAAO,IAAK;MACpB,oBACIvB,OAAA;QAAyBa,EAAE,EAAEU,OAAO,CAACV,EAAG;QAACW,OAAO,EAAGf,CAAC,IAAK;UAAEO,aAAa,CAACP,CAAC,CAAC;QAAC,CAAE;QAAAQ,QAAA,eAC1EjB,OAAA;UAAGa,EAAE,EAAEU,OAAO,CAACV,EAAG;UAAAI,QAAA,EAAEM,OAAO,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAD7BE,OAAO,CAACV,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CAAC;IAEjB,CAAC,CAAC,eACFrB,OAAA,CAACF,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;AAEX,CAAC;AAAAjB,EAAA,CAhDKD,WAAW;EAAA,QAEoBR,YAAY,EAM5BC,WAAW,EACJC,SAAS;AAAA;AAAA6B,EAAA,GAT/BvB,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}