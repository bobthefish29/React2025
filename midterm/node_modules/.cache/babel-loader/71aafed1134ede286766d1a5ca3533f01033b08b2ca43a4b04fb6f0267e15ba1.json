{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpunc\\\\OneDrive\\\\Desktop\\\\React2025\\\\midterm\\\\src\\\\components\\\\ProductPage.js\",\n  _s = $RefreshSig$();\nimport useFetchData from '../hooks/fetchData';\nimport { useNavigate, useParams, Outlet } from 'react-router-dom';\nimport '../css/productPage.css';\nimport Image from '../elements/Image';\nimport Text from '../elements/Text';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const {\n    data,\n    error,\n    loading\n  } = useFetchData('products');\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const changeProduct = e => {\n    navigate(e.target.id);\n  };\n\n  // the -1 goes back a page, or it goes back one dom item\n  const backButton = () => {\n    navigate(-1);\n  };\n\n  // if there was an error with getting the data it will be here\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"there was an error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"THE PAGE IS LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  // This is the whole page\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productPage\",\n    children: id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          backButton();\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : // if there is no id, than it will display all the products as buttons\n    data === null || data === void 0 ? void 0 : data.map(product => /*#__PURE__*/_jsxDEV(\"button\", {\n      id: product.id,\n      onClick: e => {\n        changeProduct(e);\n      },\n      className: \"productPageButton\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        image: product.image,\n        name: \"productPageImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: product.id,\n        children: product.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductPage, \"JFYlk+q9fRQqvlhcjORoi6ZsWl4=\", false, function () {\n  return [useFetchData, useNavigate, useParams];\n});\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["useFetchData","useNavigate","useParams","Outlet","Image","Text","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductPage","_s","data","error","loading","navigate","id","console","log","changeProduct","e","target","backButton","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","product","image","name","title","_c","$RefreshReg$"],"sources":["C:/Users/dpunc/OneDrive/Desktop/React2025/midterm/src/components/ProductPage.js"],"sourcesContent":["import useFetchData from '../hooks/fetchData';\r\nimport { useNavigate, useParams, Outlet } from 'react-router-dom';\r\n\r\nimport '../css/productPage.css';\r\n\r\nimport Image from '../elements/Image';\r\nimport Text from '../elements/Text';\r\n\r\n\r\nconst ProductPage = () => {\r\n\r\n    const { data, error, loading } = useFetchData('products');\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    console.log(id);\r\n\r\n    const changeProduct = (e) => {\r\n        navigate(e.target.id);\r\n    };\r\n\r\n            // the -1 goes back a page, or it goes back one dom item\r\n    const backButton = () =>{\r\n        navigate(-1);\r\n    }\r\n\r\n    // if there was an error with getting the data it will be here\r\n    if (error) {\r\n        return (\r\n            <div>\r\n                there was an error\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                THE PAGE IS LOADING\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    // This is the whole page\r\n    return (\r\n        <div className=\"productPage\">\r\n            {/* checks to see if an id is in the url, if there is it displays the product */}\r\n            {id ? (\r\n                <>\r\n                    <button onClick={()=>{backButton()}}>Back</button>\r\n                    <Outlet />\r\n                </>\r\n\r\n            ) : (\r\n                // if there is no id, than it will display all the products as buttons\r\n                data?.map((product) =>\r\n                    <button key={product.id} id={product.id} onClick={(e) => { changeProduct(e) }} className=\"productPageButton\">\r\n                        <Image image={product.image} name=\"productPageImage\"/>\r\n                        <p id={product.id}>{product.title}</p>\r\n                    </button>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}