{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpunc\\\\OneDrive\\\\Desktop\\\\React2025\\\\midterm\\\\src\\\\components\\\\ProductPage.js\",\n  _s = $RefreshSig$();\nimport useFetchData from '../hooks/fetchData';\nimport { useNavigate, useParams, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const {\n    data,\n    error,\n    loading\n  } = useFetchData('products');\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const changeProduct = e => {\n    navigate(e.target.id);\n  };\n\n  // if there was an error with getting the data it will be here\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"there was an error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"THE PAGE IS LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  // This is the whole page\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'red'\n    },\n    children: id ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : // if there is no id, than it will display all the products as buttons\n    data === null || data === void 0 ? void 0 : data.map(product => /*#__PURE__*/_jsxDEV(\"button\", {\n      id: product.id,\n      onClick: e => {\n        changeProduct(e);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: product.id,\n        children: product.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductPage, \"JFYlk+q9fRQqvlhcjORoi6ZsWl4=\", false, function () {\n  return [useFetchData, useNavigate, useParams];\n});\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["useFetchData","useNavigate","useParams","Outlet","jsxDEV","_jsxDEV","ProductPage","_s","data","error","loading","navigate","id","console","log","changeProduct","e","target","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","map","product","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/dpunc/OneDrive/Desktop/React2025/midterm/src/components/ProductPage.js"],"sourcesContent":["import useFetchData from '../hooks/fetchData';\r\nimport { useNavigate, useParams, Outlet } from 'react-router-dom';\r\n\r\n\r\nconst ProductPage = () => {\r\n\r\n    const { data, error, loading } = useFetchData('products');\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    console.log(id);\r\n\r\n    const changeProduct = (e) => {\r\n        navigate(e.target.id);\r\n    };\r\n\r\n    // if there was an error with getting the data it will be here\r\n    if (error) {\r\n        return (\r\n            <div>\r\n                there was an error\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                THE PAGE IS LOADING\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    // This is the whole page\r\n    return (\r\n        <div style={{ backgroundColor: 'red' }}>\r\n            {/* checks to see if an id is in the url, if there is it displays the product */}\r\n            {id ? (\r\n                <Outlet />\r\n            ) : (\r\n                // if there is no id, than it will display all the products as buttons\r\n                data?.map((product) =>\r\n                    <button key={product.id} id={product.id} onClick={(e) => { changeProduct(e) }}>\r\n                        <p id={product.id}>{product.title}</p>\r\n                    </button>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductPage;"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,oBAAoB;AAC7C,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGV,YAAY,CAAC,UAAU,CAAC;EAEzD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAE1BW,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAEf,MAAMG,aAAa,GAAIC,CAAC,IAAK;IACzBL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACL,EAAE,CAAC;EACzB,CAAC;;EAED;EACA,IAAIH,KAAK,EAAE;IACP,oBACIJ,OAAA;MAAAa,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;EAEA,IAAIZ,OAAO,EAAE;IACT,oBACIL,OAAA;MAAAa,QAAA,EAAK;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd;;EAKA;EACA,oBACIjB,OAAA;IAAKkB,KAAK,EAAE;MAAEC,eAAe,EAAE;IAAM,CAAE;IAAAN,QAAA,EAElCN,EAAE,gBACCP,OAAA,CAACF,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAEV;IACAd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiB,GAAG,CAAEC,OAAO,iBACdrB,OAAA;MAAyBO,EAAE,EAAEc,OAAO,CAACd,EAAG;MAACe,OAAO,EAAGX,CAAC,IAAK;QAAED,aAAa,CAACC,CAAC,CAAC;MAAC,CAAE;MAAAE,QAAA,eAC1Eb,OAAA;QAAGO,EAAE,EAAEc,OAAO,CAACd,EAAG;QAAAM,QAAA,EAAEQ,OAAO,CAACE;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GAD7BI,OAAO,CAACd,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACZ;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAf,EAAA,CAjDKD,WAAW;EAAA,QAEoBN,YAAY,EAE5BC,WAAW,EACbC,SAAS;AAAA;AAAA2B,EAAA,GALtBvB,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}